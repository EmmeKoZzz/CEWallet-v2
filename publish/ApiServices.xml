<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiServices</name>
    </assembly>
    <members>
        <member name="M:ApiServices.Controllers.AuthController.ValidateToken">
            <summary> Validates a given token and returns the user and role information if successful. </summary>
            <response code="401"> Invalid or expired token. </response>
            <response code="200"> Token is valid, and user information is returned. </response>
        </member>
        <member name="M:ApiServices.Controllers.AuthController.LoginUser(Common.DataTransferObjects.LoginUserDto)">
            <summary> Logs in a user. </summary>
            <param name="credentials">The user's login credentials.</param>
            <response code="200"> Login successful. </response>
            <response code="401"> Incorrect password. </response>
            <response code="404"> User not found. </response>
        </member>
        <member name="M:ApiServices.Controllers.AuthController.RegisterUser(Common.DataTransferObjects.RegisterUserDto)">
            <summary> Registers a new user. </summary>
            <param name="userDtoDetails">The details of the user to be registered, including their role.</param>
            <response code="400"> Invalid request (e.g., missing data). </response>
            <response code="401"> Unauthorized (user attempting to register without administrator privileges). </response>
            <response code="404"> Invalid role specified (role doesn't exist). </response>
            <response code="200"> User registered successfully. </response>
        </member>
        <member name="M:ApiServices.Controllers.CurrencyController.GetAll(System.Boolean)">
            <summary> Retrieves a list of all currencies. </summary>
            <param name="funds">Optional parameter indicating whether to include related Fund information.</param>
            <response code="200"> List of CurrencyDto objects representing retrieved currencies. </response>
            <response code="400"> Bad request (e.g., invalid data in request body). </response>
            <response code="401"> Unauthorized (missing or invalid authorization token). </response>
        </member>
        <member name="M:ApiServices.Controllers.CurrencyController.Add(Common.DataTransferObjects.AddCurrencyDto)">
            <summary>Adds a new currency.</summary>
            <param name="info">The details of the currency to be added.</param>
            <response code="200">Currency added successfully.</response>
            <response code="401">Unauthorized (missing or invalid authorization token).</response>
        </member>
        <member name="M:ApiServices.Controllers.CurrencyController.Update(Common.DataTransferObjects.AddCurrencyDto,System.Guid)">
            <summary> Updates an existing currency. </summary>
            <param name="info">The details of the currency to be updated.</param>
            <param name="id">ID of the currency.</param>
            <response code="200">Currency updated successfully.</response>
            <response code="401">Unauthorized (missing or invalid authorization token).</response>
            <response code="404">Currency not found.</response>
        </member>
        <member name="M:ApiServices.Controllers.CurrencyController.Delete(System.Guid)">
            <summary> Deletes a currency. </summary>
            <param name="id">The unique identifier of the currency to be deleted.</param>
            <response code="200">Currency deleted successfully.</response>
            <response code="401">Unauthorized (missing or invalid authorization token).</response>
            <response code="404">Currency not found.</response>
        </member>
        <member name="M:ApiServices.Controllers.CurrencyController.Test">
            <summary>Gets the informal foreign exchange rates.</summary>
            <response code="200">Returns a list of informal foreign exchange rates.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.GetAll">
            <summary> Retrieves all funds. Only administrators and Supervisors are allowed to perform this action.</summary>
            <response code="200">Successful retrieval of funds.</response>
            <response code="401">Unauthorized access.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.Get(System.Guid)">
            <summary> Retrieves a specific fund by its ID. </summary>
            <param name="id">The ID of the fund to retrieve.</param>
            <response code="200">Successful retrieval of the fund.</response>
            <response code="401">Unauthorized access.</response>
            <response code="404">Fund not found.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.GetUserFunds(System.Guid)">
            <summary> Retrieves funds associated with a specific user. </summary>
            <param name="id">The ID of the user whose funds to retrieve.</param>
            <response code="200">Successful retrieval of the user's funds.</response>
            <response code="401">Unauthorized access.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.Add(Common.DataTransferObjects.AddFundDto)">
            <summary> Adds a new fund. Only administrators are allowed to perform this action.</summary>
            <param name="info">The information for the new fund.</param>
            <response code="200">Successful addition of the fund.</response>
            <response code="400">Invalid fund information.</response>
            <response code="401">Unauthorized access.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.Update(Common.DataTransferObjects.AddFundDto,System.Guid)">
            <summary> Updates an existing fund. Only administrators are allowed to perform this action.</summary>
            <param name="info">The updated information for the fund.</param>
            <param name="id">The ID of the fund to update.</param>
            <response code="200">Successful update of the fund.</response>
            <response code="400">Invalid fund information.</response>
            <response code="401">Unauthorized access.</response>
            <response code="404">Fund not found.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.Transfer(Common.DataTransferObjects.TransferDto)">
            <summary> Transfers funds between accounts. Only administrators and Supervisors are allowed to perform this action.</summary>
            <param name="info">The transfer request details, including source and destination accounts, amount, and optional notes.</param>
            <response code="200">The transfer was successful.</response>
            <response code="400">The transfer request is invalid or missing required fields.</response>
            <response code="401">The user is not authorized to perform this action.</response>
            <response code="404">The source or destination account does not exist.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.Withdraw(Common.DataTransferObjects.TransactionDto)">
            <summary> Withdraws funds from a specified account. </summary>
            <param name="info">The withdrawal information.</param>
            <response code="200">Successful withdrawal.</response>
            <response code="400">Invalid withdrawal request.</response>
            <response code="401">The user is not authorized to perform this action.</response>
            <response code="404">Account not found.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.Deposit(Common.DataTransferObjects.TransactionDto)">
            <summary>Deposits funds into a specified account. Only administrators are allowed to perform this action.</summary>
            <param name="info">The deposit information.</param>
            <response code="200">Successful deposit.</response>
            <response code="400">Invalid deposit request.</response>
            <response code="401">The user is not authorized to perform this action.</response>
            <response code="404">Account not found.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.AddUser(System.Guid,System.Guid)">
            <summary>Attaches a user to a specified fund. Only administrators are allowed to perform this action.</summary>
            <param name="fundId">The ID of the fund.</param>
            <param name="userId">The ID of the user.</param>
            <response code="200">User attached successfully.</response>
            <response code="401">The user is not authorized to perform this action.</response>
            <response code="404">Fund or user not found.</response>
        </member>
        <member name="M:ApiServices.Controllers.FundController.Delete(System.Guid)">
            <summary>Deletes a fund by its unique identifier. Only administrators are allowed to perform this action.</summary>  
            <param name="id">The unique identifier of the fund to be deleted.</param>  
            <response code="200">The fund is successfully deleted.</response>  
            <response code="401">The user is not authorized to perform this action.</response>
            <response code="404">No fund is found with the specified identifier.</response>  
        </member>
        <member name="M:ApiServices.Controllers.RoleController.GetAll">
            <summary> Retrieves a list of all available user roles. </summary>
            <response code="401"> Unauthorized (user attempting to access without administrator privileges). </response>
        </member>
        <member name="M:ApiServices.Controllers.RoleController.GetById(System.Guid)">
            <summary> Get role by his ID </summary>
            <response code="401"> Unauthorized (user attempting to access without administrator privileges). </response>
            <response code="404"> Invalid role specified (role doesn't exist). </response>
        </member>
        <member name="M:ApiServices.Controllers.UserController.GetUsers">
            <summary> Retrieves a list of all user details from the database. </summary>
        </member>
        <member name="M:ApiServices.Controllers.UserController.GetUserById(System.Nullable{System.Guid},System.String,System.String)">
            <summary> Retrieves a list of user details based on specified criteria. </summary>
             <response code="404"> User not found. </response>
        </member>
        <member name="M:ApiServices.Controllers.UserController.UpdateUser(Common.DataTransferObjects.RegisterUserDto)">
            <summary> Updates the details of a specified user. </summary>
             <response code="400"> Invalid request (e.g., invalid data). </response>
             <response code="401"> Unauthorized. </response>
             <response code="404"> User not found. </response>
        </member>
        <member name="M:ApiServices.Controllers.UserController.ResetPassword(Common.DataTransferObjects.ResetPasswordDto)">
            <summary> Resets the password for a specified user. </summary>
             <response code="400"> Invalid request (e.g., invalid data). </response>
             <response code="401"> Unauthorized (user attempting to access without administrator privileges or invalid old password). </response>
             <response code="404"> User not found. </response>
        </member>
        <member name="M:ApiServices.Controllers.UserController.Delete(System.Guid)">
            <summary> Handles user delete requests. </summary>
            <response code="401"> Unauthorized (user attempting to access without administrator privileges). </response>
            <response code="404"> User not found. </response>
        </member>
        <member name="T:ApiServices.Migrations.initial">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiServices.Migrations.optimize_columns">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.optimize_columns.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.optimize_columns.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.optimize_columns.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiServices.Migrations.add_admin">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.add_admin.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.add_admin.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.add_admin.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiServices.Migrations.newData">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.newData.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.newData.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.newData.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiServices.Migrations.update">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiServices.Migrations.fix_relationshipUserFund">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.fix_relationshipUserFund.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.fix_relationshipUserFund.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.fix_relationshipUserFund.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiServices.Migrations.update_currency_addActiveColumn">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update_currency_addActiveColumn.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update_currency_addActiveColumn.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update_currency_addActiveColumn.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ApiServices.Migrations.update_0">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update_0.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update_0.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Migrations.update_0.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ApiServices.Services.AuthService.GenerateToken(System.Security.Claims.ClaimsIdentity)">
            Generates a JSON Web Token (JWT) based on the provided configuration and identity claims.
        </member>
        <member name="M:ApiServices.Services.AuthService.Authorize(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Common.Constants.UserRole.Type})">
            Authorizes a request based on the provided JWT token.
        </member>
        <member name="M:ApiServices.Services.AuthService.RegisterUser(Common.DataTransferObjects.RegisterUserDto)">
            Registers a new user in the database.
        </member>
        <member name="M:ApiServices.Services.AuthService.LoginUser(Common.DataTransferObjects.LoginUserDto)">
            Signs in a user using their username and password.
        </member>
        <member name="M:ApiServices.Services.CurrencyService.InformalForeignExchange">
            <summary>Retrieves informal foreign exchange rates from a public website (eltoque.com).</summary>
            <returns>A dictionary containing informal foreign exchange rates.</returns>
        </member>
        <member name="M:ApiServices.Services.CurrencyService.GetAll(System.Boolean)">
            <summary>Retrieves all active currencies from the database, with an optional flag to include related fund information.</summary>  
            <param name="funds">Indicates whether to include fund-related data in the response.</param>  
            <returns>An asynchronous task returning an enumerable collection of CurrencyDto objects.</returns>  
        </member>
        <member name="M:ApiServices.Services.CurrencyService.Add(Common.DataTransferObjects.AddCurrencyDto)">
            <summary>Adds a new currency to the database or reactivates an existing inactive currency.</summary>  
            <param name="info">The information for the currency to be added.</param>  
            <returns>An asynchronous task returning a ServiceFlag containing the result of the operation.</returns>  
        </member>
        <member name="M:ApiServices.Services.CurrencyService.Update(Common.DataTransferObjects.AddCurrencyDto,System.Guid)">
            <summary>Updates an existing currency in the database.</summary>  
            <param name="info">The updated currency information.</param>  
            <param name="id">The unique identifier of the currency to be updated.</param>  
            <returns>An asynchronous task returning a ServiceFlag containing the result of the operation.</returns>  
        </member>
        <member name="M:ApiServices.Services.CurrencyService.Delete(System.Guid)">
            <summary>  
            Deletes a currency from the database by marking it as inactive.  
            </summary>  
            <param name="id">The unique identifier of the currency to be deleted.</param>  
            <returns>An asynchronous task returning a ServiceFlag containing the result of the operation.</returns>  
        </member>
        <member name="M:ApiServices.Services.CurrencyService.MapCurrencyToDto(ApiServices.Models.Currency,System.Boolean,System.Boolean)">
            <summary> Maps a Currency entity to a CurrencyDto object.</summary>  
            <param name="entity">The Currency entity to be mapped.</param>  
            <param name="funds">A flag indicating whether to include fund information in the DTO.</param>
            <param name="balance">A flag indicating whether to include total balance information in the DTO.</param>
            <returns>A Task representing the asynchronous operation, containing the mapped CurrencyDto.</returns>  
        </member>
        <member name="M:ApiServices.Services.CurrencyService.GetTotalBalance(ApiServices.Models.Currency)">
            <summary>Calculates the total balance of a currency in the database by summing amounts from FundCurrencies.</summary>  
            <param name="currency">The Currency object for which to calculate the total balance.</param>  
            <returns>A Task representing the asynchronous operation, containing the total balance as a double.</returns>  
        </member>
        <member name="M:ApiServices.Services.FundService.GetAll">
            <summary> Retrieves a collection of all active funds. </summary>
            <returns>An array of FundDto objects representing all active funds.</returns>
        </member>
        <member name="M:ApiServices.Services.FundService.Get(System.Guid)">
            <summary> Retrieves a specific fund by its ID. </summary>
            <param name="id">The unique identifier of the fund.</param>
            <returns>A ServiceFlag object containing either a FundDto representing the retrieved fund on success (with OK), 
            or null with NotFound if the fund is not found.</returns>
        </member>
        <member name="M:ApiServices.Services.FundService.GetByUser(System.Guid)">
            <summary> Retrieves all funds associated with a specific user. </summary>
            <param name="id">The unique identifier of the user.</param>
            <returns>An array of FundDto objects representing all funds owned by the user, 
            or an empty array if the user has no funds.</returns>
        </member>
        <member name="M:ApiServices.Services.FundService.Add(Common.DataTransferObjects.AddFundDto)">
            <summary> Creates a new fund based on the provided information. </summary>
            <param name="info">An AddFundDto object containing details about the new fund.</param>
            <returns>A FundDto object representing the newly created fund.</returns>
        </member>
        <member name="M:ApiServices.Services.FundService.Update(Common.DataTransferObjects.AddFundDto,System.Guid)">
            <summary> Updates an existing fund with the provided information. </summary>
            <param name="info">An AddFundDto object containing updated details for the fund.</param>
            <param name="id">The unique identifier of the fund to be updated.</param>
            <returns>A ServiceFlag object containing either a FundDto representing the updated fund on success (with OK), 
            or null with NotFound if the fund is not found.</returns>
        </member>
        <member name="M:ApiServices.Services.FundService.Transfer(Common.DataTransferObjects.TransferDto)">
            <summary> Transfers a specified amount of currency from one fund to another. </summary>  
            <param name="info">Information about the transfer, including from/to fund IDs and amount to transfer.</param>  
            <returns>A ServiceFlag containing the result of the transfer operation, including success or error information.</returns>  
        </member>
        <member name="M:ApiServices.Services.FundService.Withdraw(Common.DataTransferObjects.TransactionDto)">
            <summary>Withdraws a specified amount of currency from a fund.</summary>  
            <param name="info">Transaction details containing currency type and amount to withdraw.</param>  
            <returns>A ServiceFlag containing the result of the withdrawal operation,   
            including the FundDto if successful or an error message if unsuccessful.</returns>  
        </member>
        <member name="M:ApiServices.Services.FundService.Deposit(Common.DataTransferObjects.TransactionDto)">
            <summary>  
            Deposits a specified amount of currency into a fund.  
            </summary>  
            <param name="info">Transaction details containing currency type and amount to deposit.</param>  
            <returns>A ServiceFlag containing the result of the deposit operation,   
            including the FundDto if successful or an error message if unsuccessful.</returns>  
        </member>
        <member name="M:ApiServices.Services.FundService.AttachUser(System.Guid,System.Guid)">
            <summary>Attaches a user to a specified fund by associating the user with the fund.</summary>  
            <param name="userId">The unique identifier of the user to be attached to the fund.</param>  
            <param name="fundId">The unique identifier of the fund to which the user will be attached.</param>  
            <returns>A ServiceFlag containing the result of the attach operation,   
            including the FundDto if successful or an error message if unsuccessful.</returns>  
        </member>
        <member name="M:ApiServices.Services.FundService.Delete(System.Guid)">
            <summary>Marks a fund as inactive (deletes it logically) and removes associated FundCurrency entries.</summary>  
            <param name="id">The unique identifier of the fund to be deleted.</param>  
            <returns>A ServiceFlag containing the result of the delete operation,   
            including the FundDto if successful or a not found message if unsuccessful.</returns>  
        </member>
        <member name="M:ApiServices.Services.RoleService.GetAll">
            Retrieves a list of all available user roles.
        </member>
        <member name="M:ApiServices.Services.RoleService.FindById(System.Guid)">
            Retrieves a specific role by its unique identifier.
        </member>
        <member name="M:ApiServices.Services.UserService.GetAll(System.Boolean)">
            Retrieves a list of all users.
        </member>
        <member name="M:ApiServices.Services.UserService.FindBy(System.Nullable{System.Guid},System.String,System.String)">
            Finds a user based on the provided ID, name, or email.
        </member>
        <member name="M:ApiServices.Services.UserService.UpdateUser(Common.DataTransferObjects.RegisterUserDto)">
            Updates the information of a user.
        </member>
        <member name="M:ApiServices.Services.UserService.ResetPassword(Common.DataTransferObjects.ResetPasswordDto)">
            Resets the password for a specified user.
        </member>
        <member name="M:ApiServices.Services.UserService.Delete(System.Guid)">
            Deletes a user with the specified ID.
        </member>
    </members>
</doc>
